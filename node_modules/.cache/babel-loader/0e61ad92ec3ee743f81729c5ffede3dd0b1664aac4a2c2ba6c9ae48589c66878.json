{"ast":null,"code":"\"use strict\";\n\n/*\n * DOCS: https://razorpay.com/docs/payment-links/\n */\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar Promise = require(\"promise\"),\n  _require = require('../utils/razorpay-utils'),\n  normalizeDate = _require.normalizeDate,\n  normalizeNotes = _require.normalizeNotes;\nmodule.exports = function paymentLinkApi(api) {\n  var BASE_URL = \"/payment_links\",\n    MISSING_ID_ERROR = \"Payment Link ID is mandatory\";\n  return {\n    create: function create(params, callback) {\n      /*\n       * Creates Payment Link.\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL;\n      return api.postBody({\n        url: url,\n        data: params\n      }, callback);\n    },\n    cancel: function cancel(paymentLinkId, callback) {\n      /*\n       * Cancels issued paymentLink\n       *\n       * @param {String} paymentLinkId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!paymentLinkId) {\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n      var url = BASE_URL + \"/\" + paymentLinkId + \"/cancel\";\n      return api.post({\n        url: url\n      }, callback);\n    },\n    fetch: function fetch(paymentLinkId, callback) {\n      /*\n       * Fetches paymentLink entity with given id\n       *\n       * @param {String} paymentLinkId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!paymentLinkId) {\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n      var url = BASE_URL + \"/\" + paymentLinkId;\n      return api.get({\n        url: url\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      /*\n       * Fetches multiple paymentLink with given query options\n       *\n       * @param {Object} paymentLinkId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n        to = params.to,\n        count = params.count,\n        skip = params.skip,\n        url = BASE_URL;\n      if (from) {\n        from = normalizeDate(from);\n      }\n      if (to) {\n        to = normalizeDate(to);\n      }\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    edit: function edit(paymentLinkId, params, callback) {\n      var rest = params;\n      var isbody = true;\n      var data = _extends({\n        isbody: isbody\n      }, rest);\n      return api.patch({\n        url: BASE_URL + \"/\" + paymentLinkId,\n        data: data\n      }, callback);\n    },\n    notifyBy: function notifyBy(paymentLinkId, medium, callback) {\n      /*\n       * Send/re-send notification for invoice by given medium\n       * \n       * @param {String} paymentLinkId\n       * @param {String} medium\n       * @param {Function} callback\n       * \n       * @return {Promise}\n       */\n\n      if (!paymentLinkId) {\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n      if (!medium) {\n        return Promise.reject(\"`medium` is required\");\n      }\n      var url = BASE_URL + \"/\" + paymentLinkId + \"/notify_by/\" + medium;\n      return api.post({\n        url: url\n      }, callback);\n    }\n  };\n};","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","Promise","require","_require","normalizeDate","normalizeNotes","module","exports","paymentLinkApi","api","BASE_URL","MISSING_ID_ERROR","create","params","callback","url","postBody","data","cancel","paymentLinkId","reject","post","fetch","get","all","undefined","from","to","count","skip","Number","edit","rest","isbody","patch","notifyBy","medium"],"sources":["/Users/rajnish/Desktop/INTERN/Homeoz HealthCare/Task 3 FrontEnd Development/client/node_modules/razorpay/dist/resources/paymentLink.js"],"sourcesContent":["\"use strict\";\n\n/*\n * DOCS: https://razorpay.com/docs/payment-links/\n */\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar Promise = require(\"promise\"),\n    _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeNotes = _require.normalizeNotes;\n\n\nmodule.exports = function paymentLinkApi(api) {\n\n  var BASE_URL = \"/payment_links\",\n      MISSING_ID_ERROR = \"Payment Link ID is mandatory\";\n\n  return {\n    create: function create(params, callback) {\n\n      /*\n       * Creates Payment Link.\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL;\n      return api.postBody({\n        url: url,\n        data: params\n      }, callback);\n    },\n    cancel: function cancel(paymentLinkId, callback) {\n\n      /*\n       * Cancels issued paymentLink\n       *\n       * @param {String} paymentLinkId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!paymentLinkId) {\n\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      var url = BASE_URL + \"/\" + paymentLinkId + \"/cancel\";\n\n      return api.post({\n        url: url\n      }, callback);\n    },\n    fetch: function fetch(paymentLinkId, callback) {\n\n      /*\n       * Fetches paymentLink entity with given id\n       *\n       * @param {String} paymentLinkId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!paymentLinkId) {\n\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      var url = BASE_URL + \"/\" + paymentLinkId;\n\n      return api.get({\n        url: url\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Fetches multiple paymentLink with given query options\n       *\n       * @param {Object} paymentLinkId\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    edit: function edit(paymentLinkId, params, callback) {\n      var rest = params;\n      var isbody = true;\n\n      var data = _extends({ isbody: isbody }, rest);\n\n      return api.patch({\n        url: BASE_URL + \"/\" + paymentLinkId,\n        data: data\n      }, callback);\n    },\n    notifyBy: function notifyBy(paymentLinkId, medium, callback) {\n\n      /*\n       * Send/re-send notification for invoice by given medium\n       * \n       * @param {String} paymentLinkId\n       * @param {String} medium\n       * @param {Function} callback\n       * \n       * @return {Promise}\n       */\n\n      if (!paymentLinkId) {\n\n        return Promise.reject(MISSING_ID_ERROR);\n      }\n\n      if (!medium) {\n\n        return Promise.reject(\"`medium` is required\");\n      }\n\n      var url = BASE_URL + \"/\" + paymentLinkId + \"/notify_by/\" + medium;\n\n      return api.post({\n        url: url\n      }, callback);\n    }\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}