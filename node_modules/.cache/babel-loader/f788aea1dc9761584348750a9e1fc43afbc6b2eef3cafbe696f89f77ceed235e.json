{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\nvar Promise = require(\"promise\");\nvar _require = require('../utils/razorpay-utils'),\n  normalizeDate = _require.normalizeDate,\n  normalizeNotes = _require.normalizeNotes;\nvar BASE_URL = '/virtual_accounts',\n  ID_REQUIRED_MSG = \"`virtual_account_id` is mandatory\";\nmodule.exports = function (api) {\n  return {\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      var from = params.from,\n        to = params.to,\n        count = params.count,\n        skip = params.skip,\n        otherParams = _objectWithoutProperties(params, [\"from\", \"to\", \"count\", \"skip\"]);\n      var url = BASE_URL;\n      if (from) {\n        from = normalizeDate(from);\n      }\n      if (to) {\n        to = normalizeDate(to);\n      }\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n      return api.get({\n        url: url,\n        data: _extends({\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        }, otherParams)\n      }, callback);\n    },\n    fetch: function fetch(virtualAccountId, callback) {\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n      var url = BASE_URL + \"/\" + virtualAccountId;\n      return api.get({\n        url: url\n      }, callback);\n    },\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      var notes = params.notes,\n        rest = _objectWithoutProperties(params, [\"notes\"]);\n      var data = Object.assign(rest, normalizeNotes(notes));\n      return api.post({\n        url: BASE_URL,\n        data: data\n      }, callback);\n    },\n    close: function close(virtualAccountId, callback) {\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n      return api.post({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/close\"\n      }, callback);\n    },\n    fetchPayments: function fetchPayments(virtualAccountId, callback) {\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n      var url = BASE_URL + \"/\" + virtualAccountId + \"/payments\";\n      return api.get({\n        url: url\n      }, callback);\n    },\n    addReceiver: function addReceiver(virtualAccountId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n\n      /*\n       * Add Receiver to an Existing Virtual Account\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n      return api.post({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/receivers\",\n        data: params\n      }, callback);\n    },\n    allowedPayer: function allowedPayer(virtualAccountId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n\n      /*\n       * Add an Allowed Payer Account\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n      return api.post({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/allowed_payers\",\n        data: params\n      }, callback);\n    },\n    deleteAllowedPayer: function deleteAllowedPayer(virtualAccountId, allowedPayerId, callback) {\n      /*\n      * Delete an Allowed Payer Account\n      * @param {String} virtualAccountId\n      * @param {String} allowedPayerId\n      * @param {Function} callback\n      *\n      * @return {Promise}\n      */\n\n      if (!virtualAccountId) {\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n      if (!allowedPayerId) {\n        return Promise.reject(\"allowed payer id is mandatory\");\n      }\n      return api.delete({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/allowed_payers/\" + allowedPayerId\n      }, callback);\n    }\n  };\n};","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","Promise","require","_require","normalizeDate","normalizeNotes","BASE_URL","ID_REQUIRED_MSG","module","exports","api","all","params","undefined","callback","from","to","count","skip","otherParams","url","Number","get","data","fetch","virtualAccountId","reject","create","notes","rest","post","close","fetchPayments","addReceiver","allowedPayer","deleteAllowedPayer","allowedPayerId","delete"],"sources":["/Users/rajnish/Desktop/INTERN/Homeoz HealthCare/Task 3 FrontEnd Development/client/node_modules/razorpay/dist/resources/virtualAccounts.js"],"sourcesContent":["\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar Promise = require(\"promise\");\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeDate = _require.normalizeDate,\n    normalizeNotes = _require.normalizeNotes;\n\nvar BASE_URL = '/virtual_accounts',\n    ID_REQUIRED_MSG = \"`virtual_account_id` is mandatory\";\n\nmodule.exports = function (api) {\n  return {\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          otherParams = _objectWithoutProperties(params, [\"from\", \"to\", \"count\", \"skip\"]);\n\n      var url = BASE_URL;\n\n      if (from) {\n        from = normalizeDate(from);\n      }\n\n      if (to) {\n        to = normalizeDate(to);\n      }\n\n      count = Number(count) || 10;\n      skip = Number(skip) || 0;\n\n      return api.get({\n        url: url,\n        data: _extends({\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        }, otherParams)\n      }, callback);\n    },\n    fetch: function fetch(virtualAccountId, callback) {\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var url = BASE_URL + \"/\" + virtualAccountId;\n\n      return api.get({\n        url: url\n      }, callback);\n    },\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n      var notes = params.notes,\n          rest = _objectWithoutProperties(params, [\"notes\"]);\n\n      var data = Object.assign(rest, normalizeNotes(notes));\n\n      return api.post({\n        url: BASE_URL,\n        data: data\n      }, callback);\n    },\n    close: function close(virtualAccountId, callback) {\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      return api.post({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/close\"\n      }, callback);\n    },\n    fetchPayments: function fetchPayments(virtualAccountId, callback) {\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      var url = BASE_URL + \"/\" + virtualAccountId + \"/payments\";\n\n      return api.get({\n        url: url\n      }, callback);\n    },\n    addReceiver: function addReceiver(virtualAccountId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n\n\n      /*\n       * Add Receiver to an Existing Virtual Account\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      return api.post({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/receivers\",\n        data: params\n      }, callback);\n    },\n    allowedPayer: function allowedPayer(virtualAccountId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n\n\n      /*\n       * Add an Allowed Payer Account\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      return api.post({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/allowed_payers\",\n        data: params\n      }, callback);\n    },\n    deleteAllowedPayer: function deleteAllowedPayer(virtualAccountId, allowedPayerId, callback) {\n\n      /*\n      * Delete an Allowed Payer Account\n      * @param {String} virtualAccountId\n      * @param {String} allowedPayerId\n      * @param {Function} callback\n      *\n      * @return {Promise}\n      */\n\n      if (!virtualAccountId) {\n\n        return Promise.reject(ID_REQUIRED_MSG);\n      }\n\n      if (!allowedPayerId) {\n\n        return Promise.reject(\"allowed payer id is mandatory\");\n      }\n\n      return api.delete({\n        url: BASE_URL + \"/\" + virtualAccountId + \"/allowed_payers/\" + allowedPayerId\n      }, callback);\n    }\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}