{"ast":null,"code":"'use strict';\n\nvar errors = require('./errors.js'),\n  isFunction = require('lodash/isFunction'),\n  isObjectLike = require('lodash/isObjectLike'),\n  isString = require('lodash/isString'),\n  isUndefined = require('lodash/isUndefined');\nmodule.exports = function (options) {\n  var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n  if (!isObjectLike(options)) {\n    throw new TypeError(errorText);\n  }\n  if (!isFunction(options.PromiseImpl)) {\n    throw new TypeError(errorText + '.PromiseImpl');\n  }\n  if (!isUndefined(options.constructorMixin) && !isFunction(options.constructorMixin)) {\n    throw new TypeError(errorText + '.PromiseImpl');\n  }\n  var PromiseImpl = options.PromiseImpl;\n  var constructorMixin = options.constructorMixin;\n  var plumbing = {};\n  plumbing.init = function (requestOptions) {\n    var self = this;\n    self._rp_promise = new PromiseImpl(function (resolve, reject) {\n      self._rp_resolve = resolve;\n      self._rp_reject = reject;\n      if (constructorMixin) {\n        constructorMixin.apply(self, arguments); // Using arguments since specific Promise libraries may pass additional parameters\n      }\n    });\n\n    self._rp_callbackOrig = requestOptions.callback;\n    requestOptions.callback = self.callback = function RP$callback(err, response, body) {\n      plumbing.callback.call(self, err, response, body);\n    };\n    if (isString(requestOptions.method)) {\n      requestOptions.method = requestOptions.method.toUpperCase();\n    }\n    requestOptions.transform = requestOptions.transform || plumbing.defaultTransformations[requestOptions.method];\n    self._rp_options = requestOptions;\n    self._rp_options.simple = requestOptions.simple !== false;\n    self._rp_options.resolveWithFullResponse = requestOptions.resolveWithFullResponse === true;\n    self._rp_options.transform2xxOnly = requestOptions.transform2xxOnly === true;\n  };\n  plumbing.defaultTransformations = {\n    HEAD: function (body, response, resolveWithFullResponse) {\n      return resolveWithFullResponse ? response : response.headers;\n    }\n  };\n  plumbing.callback = function (err, response, body) {\n    var self = this;\n    var origCallbackThrewException = false,\n      thrownException = null;\n    if (isFunction(self._rp_callbackOrig)) {\n      try {\n        self._rp_callbackOrig.apply(self, arguments); // TODO: Apply to self mimics behavior of request@2. Is that also right for request@next?\n      } catch (e) {\n        origCallbackThrewException = true;\n        thrownException = e;\n      }\n    }\n    var is2xx = !err && /^2/.test('' + response.statusCode);\n    if (err) {\n      self._rp_reject(new errors.RequestError(err, self._rp_options, response));\n    } else if (self._rp_options.simple && !is2xx) {\n      if (isFunction(self._rp_options.transform) && self._rp_options.transform2xxOnly === false) {\n        new PromiseImpl(function (resolve) {\n          resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n        }).then(function (transformedResponse) {\n          self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, transformedResponse));\n        }).catch(function (transformErr) {\n          self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n        });\n      } else {\n        self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, response));\n      }\n    } else {\n      if (isFunction(self._rp_options.transform) && (is2xx || self._rp_options.transform2xxOnly === false)) {\n        new PromiseImpl(function (resolve) {\n          resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n        }).then(function (transformedResponse) {\n          self._rp_resolve(transformedResponse);\n        }).catch(function (transformErr) {\n          self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n        });\n      } else if (self._rp_options.resolveWithFullResponse) {\n        self._rp_resolve(response);\n      } else {\n        self._rp_resolve(body);\n      }\n    }\n    if (origCallbackThrewException) {\n      throw thrownException;\n    }\n  };\n  plumbing.exposePromiseMethod = function (exposeTo, bindTo, promisePropertyKey, methodToExpose, exposeAs) {\n    exposeAs = exposeAs || methodToExpose;\n    if (exposeAs in exposeTo) {\n      throw new Error('Unable to expose method \"' + exposeAs + '\"');\n    }\n    exposeTo[exposeAs] = function RP$exposed() {\n      var self = bindTo || this;\n      return self[promisePropertyKey][methodToExpose].apply(self[promisePropertyKey], arguments);\n    };\n  };\n  plumbing.exposePromise = function (exposeTo, bindTo, promisePropertyKey, exposeAs) {\n    exposeAs = exposeAs || 'promise';\n    if (exposeAs in exposeTo) {\n      throw new Error('Unable to expose method \"' + exposeAs + '\"');\n    }\n    exposeTo[exposeAs] = function RP$promise() {\n      var self = bindTo || this;\n      return self[promisePropertyKey];\n    };\n  };\n  return plumbing;\n};","map":{"version":3,"names":["errors","require","isFunction","isObjectLike","isString","isUndefined","module","exports","options","errorText","TypeError","PromiseImpl","constructorMixin","plumbing","init","requestOptions","self","_rp_promise","resolve","reject","_rp_resolve","_rp_reject","apply","arguments","_rp_callbackOrig","callback","RP$callback","err","response","body","call","method","toUpperCase","transform","defaultTransformations","_rp_options","simple","resolveWithFullResponse","transform2xxOnly","HEAD","headers","origCallbackThrewException","thrownException","e","is2xx","test","statusCode","RequestError","then","transformedResponse","StatusCodeError","catch","transformErr","TransformError","exposePromiseMethod","exposeTo","bindTo","promisePropertyKey","methodToExpose","exposeAs","Error","RP$exposed","exposePromise","RP$promise"],"sources":["/Users/rajnish/Desktop/INTERN/Homeoz HealthCare/Task 3 FrontEnd Development/client/node_modules/request-promise-core/lib/plumbing.js"],"sourcesContent":["'use strict';\n\nvar errors = require('./errors.js'),\n    isFunction = require('lodash/isFunction'),\n    isObjectLike = require('lodash/isObjectLike'),\n    isString = require('lodash/isString'),\n    isUndefined = require('lodash/isUndefined');\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.PromiseImpl)) {\n        throw new TypeError(errorText + '.PromiseImpl');\n    }\n\n    if (!isUndefined(options.constructorMixin) && !isFunction(options.constructorMixin)) {\n        throw new TypeError(errorText + '.PromiseImpl');\n    }\n\n    var PromiseImpl = options.PromiseImpl;\n    var constructorMixin = options.constructorMixin;\n\n\n    var plumbing = {};\n\n    plumbing.init = function (requestOptions) {\n\n        var self = this;\n\n        self._rp_promise = new PromiseImpl(function (resolve, reject) {\n            self._rp_resolve = resolve;\n            self._rp_reject = reject;\n            if (constructorMixin) {\n                constructorMixin.apply(self, arguments); // Using arguments since specific Promise libraries may pass additional parameters\n            }\n        });\n\n        self._rp_callbackOrig = requestOptions.callback;\n        requestOptions.callback = self.callback = function RP$callback(err, response, body) {\n            plumbing.callback.call(self, err, response, body);\n        };\n\n        if (isString(requestOptions.method)) {\n            requestOptions.method = requestOptions.method.toUpperCase();\n        }\n\n        requestOptions.transform = requestOptions.transform || plumbing.defaultTransformations[requestOptions.method];\n\n        self._rp_options = requestOptions;\n        self._rp_options.simple = requestOptions.simple !== false;\n        self._rp_options.resolveWithFullResponse = requestOptions.resolveWithFullResponse === true;\n        self._rp_options.transform2xxOnly = requestOptions.transform2xxOnly === true;\n\n    };\n\n    plumbing.defaultTransformations = {\n        HEAD: function (body, response, resolveWithFullResponse) {\n            return resolveWithFullResponse ? response : response.headers;\n        }\n    };\n\n    plumbing.callback = function (err, response, body) {\n\n        var self = this;\n\n        var origCallbackThrewException = false, thrownException = null;\n\n        if (isFunction(self._rp_callbackOrig)) {\n            try {\n                self._rp_callbackOrig.apply(self, arguments); // TODO: Apply to self mimics behavior of request@2. Is that also right for request@next?\n            } catch (e) {\n                origCallbackThrewException = true;\n                thrownException = e;\n            }\n        }\n\n        var is2xx = !err && /^2/.test('' + response.statusCode);\n\n        if (err) {\n\n            self._rp_reject(new errors.RequestError(err, self._rp_options, response));\n\n        } else if (self._rp_options.simple && !is2xx) {\n\n            if (isFunction(self._rp_options.transform) && self._rp_options.transform2xxOnly === false) {\n\n                (new PromiseImpl(function (resolve) {\n                    resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n                }))\n                    .then(function (transformedResponse) {\n                        self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, transformedResponse));\n                    })\n                    .catch(function (transformErr) {\n                        self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n                    });\n\n            } else {\n                self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, response));\n            }\n\n        } else {\n\n            if (isFunction(self._rp_options.transform) && (is2xx || self._rp_options.transform2xxOnly === false)) {\n\n                (new PromiseImpl(function (resolve) {\n                    resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n                }))\n                    .then(function (transformedResponse) {\n                        self._rp_resolve(transformedResponse);\n                    })\n                    .catch(function (transformErr) {\n                        self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n                    });\n\n            } else if (self._rp_options.resolveWithFullResponse) {\n                self._rp_resolve(response);\n            } else {\n                self._rp_resolve(body);\n            }\n\n        }\n\n        if (origCallbackThrewException) {\n            throw thrownException;\n        }\n\n    };\n\n    plumbing.exposePromiseMethod = function (exposeTo, bindTo, promisePropertyKey, methodToExpose, exposeAs) {\n\n        exposeAs = exposeAs || methodToExpose;\n\n        if (exposeAs in exposeTo) {\n            throw new Error('Unable to expose method \"' + exposeAs + '\"');\n        }\n\n        exposeTo[exposeAs] = function RP$exposed() {\n            var self = bindTo || this;\n            return self[promisePropertyKey][methodToExpose].apply(self[promisePropertyKey], arguments);\n        };\n\n    };\n\n    plumbing.exposePromise = function (exposeTo, bindTo, promisePropertyKey, exposeAs) {\n\n        exposeAs = exposeAs || 'promise';\n\n        if (exposeAs in exposeTo) {\n            throw new Error('Unable to expose method \"' + exposeAs + '\"');\n        }\n\n        exposeTo[exposeAs] = function RP$promise() {\n            var self = bindTo || this;\n            return self[promisePropertyKey];\n        };\n\n    };\n\n    return plumbing;\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}