{"ast":null,"code":"'use strict';\n\nvar core = require('../'),\n  isArray = require('lodash/isArray'),\n  isFunction = require('lodash/isFunction'),\n  isObjectLike = require('lodash/isObjectLike');\nmodule.exports = function (options) {\n  var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n  if (!isObjectLike(options)) {\n    throw new TypeError(errorText);\n  }\n  if (!isFunction(options.request)) {\n    throw new TypeError(errorText + '.request');\n  }\n  if (!isArray(options.expose) || options.expose.length === 0) {\n    throw new TypeError(errorText + '.expose');\n  }\n  var plumbing = core({\n    PromiseImpl: options.PromiseImpl,\n    constructorMixin: options.constructorMixin\n  });\n\n  // Intercepting Request's init method\n\n  var originalInit = options.request.Request.prototype.init;\n  options.request.Request.prototype.init = function RP$initInterceptor(requestOptions) {\n    // Init may be called again - currently in case of redirects\n    if (isObjectLike(requestOptions) && !this._callback && !this._rp_promise) {\n      plumbing.init.call(this, requestOptions);\n    }\n    return originalInit.apply(this, arguments);\n  };\n\n  // Exposing the Promise capabilities\n\n  var thenExposed = false;\n  for (var i = 0; i < options.expose.length; i += 1) {\n    var method = options.expose[i];\n    plumbing[method === 'promise' ? 'exposePromise' : 'exposePromiseMethod'](options.request.Request.prototype, null, '_rp_promise', method);\n    if (method === 'then') {\n      thenExposed = true;\n    }\n  }\n  if (!thenExposed) {\n    throw new Error('Please expose \"then\"');\n  }\n};","map":{"version":3,"names":["core","require","isArray","isFunction","isObjectLike","module","exports","options","errorText","TypeError","request","expose","length","plumbing","PromiseImpl","constructorMixin","originalInit","Request","prototype","init","RP$initInterceptor","requestOptions","_callback","_rp_promise","call","apply","arguments","thenExposed","i","method","Error"],"sources":["/Users/rajnish/Desktop/INTERN/Homeoz HealthCare/Task 3 FrontEnd Development/client/node_modules/request-promise-core/configure/request2.js"],"sourcesContent":["'use strict';\n\nvar core = require('../'),\n    isArray = require('lodash/isArray'),\n    isFunction = require('lodash/isFunction'),\n    isObjectLike = require('lodash/isObjectLike');\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.request)) {\n        throw new TypeError(errorText + '.request');\n    }\n\n    if (!isArray(options.expose) || options.expose.length === 0) {\n        throw new TypeError(errorText + '.expose');\n    }\n\n\n    var plumbing = core({\n        PromiseImpl: options.PromiseImpl,\n        constructorMixin: options.constructorMixin\n    });\n\n\n    // Intercepting Request's init method\n\n    var originalInit = options.request.Request.prototype.init;\n\n    options.request.Request.prototype.init = function RP$initInterceptor(requestOptions) {\n\n        // Init may be called again - currently in case of redirects\n        if (isObjectLike(requestOptions) && !this._callback && !this._rp_promise) {\n\n            plumbing.init.call(this, requestOptions);\n\n        }\n\n        return originalInit.apply(this, arguments);\n\n    };\n\n\n    // Exposing the Promise capabilities\n\n    var thenExposed = false;\n    for ( var i = 0; i < options.expose.length; i+=1 ) {\n\n        var method = options.expose[i];\n\n        plumbing[ method === 'promise' ? 'exposePromise' : 'exposePromiseMethod' ](\n            options.request.Request.prototype,\n            null,\n            '_rp_promise',\n            method\n        );\n\n        if (method === 'then') {\n            thenExposed = true;\n        }\n\n    }\n\n    if (!thenExposed) {\n        throw new Error('Please expose \"then\"');\n    }\n\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,KAAK,CAAC;EACrBC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;EACnCE,UAAU,GAAGF,OAAO,CAAC,mBAAmB,CAAC;EACzCG,YAAY,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAGjDI,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAE;EAEhC,IAAIC,SAAS,GAAG,uBAAuB,CAAC,CAAC;;EAEzC,IAAI,CAACJ,YAAY,CAACG,OAAO,CAAC,EAAE;IACxB,MAAM,IAAIE,SAAS,CAACD,SAAS,CAAC;EAClC;EAEA,IAAI,CAACL,UAAU,CAACI,OAAO,CAACG,OAAO,CAAC,EAAE;IAC9B,MAAM,IAAID,SAAS,CAACD,SAAS,GAAG,UAAU,CAAC;EAC/C;EAEA,IAAI,CAACN,OAAO,CAACK,OAAO,CAACI,MAAM,CAAC,IAAIJ,OAAO,CAACI,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;IACzD,MAAM,IAAIH,SAAS,CAACD,SAAS,GAAG,SAAS,CAAC;EAC9C;EAGA,IAAIK,QAAQ,GAAGb,IAAI,CAAC;IAChBc,WAAW,EAAEP,OAAO,CAACO,WAAW;IAChCC,gBAAgB,EAAER,OAAO,CAACQ;EAC9B,CAAC,CAAC;;EAGF;;EAEA,IAAIC,YAAY,GAAGT,OAAO,CAACG,OAAO,CAACO,OAAO,CAACC,SAAS,CAACC,IAAI;EAEzDZ,OAAO,CAACG,OAAO,CAACO,OAAO,CAACC,SAAS,CAACC,IAAI,GAAG,SAASC,kBAAkBA,CAACC,cAAc,EAAE;IAEjF;IACA,IAAIjB,YAAY,CAACiB,cAAc,CAAC,IAAI,CAAC,IAAI,CAACC,SAAS,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE;MAEtEV,QAAQ,CAACM,IAAI,CAACK,IAAI,CAAC,IAAI,EAAEH,cAAc,CAAC;IAE5C;IAEA,OAAOL,YAAY,CAACS,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAE9C,CAAC;;EAGD;;EAEA,IAAIC,WAAW,GAAG,KAAK;EACvB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,OAAO,CAACI,MAAM,CAACC,MAAM,EAAEgB,CAAC,IAAE,CAAC,EAAG;IAE/C,IAAIC,MAAM,GAAGtB,OAAO,CAACI,MAAM,CAACiB,CAAC,CAAC;IAE9Bf,QAAQ,CAAEgB,MAAM,KAAK,SAAS,GAAG,eAAe,GAAG,qBAAqB,CAAE,CACtEtB,OAAO,CAACG,OAAO,CAACO,OAAO,CAACC,SAAS,EACjC,IAAI,EACJ,aAAa,EACbW,MACJ,CAAC;IAED,IAAIA,MAAM,KAAK,MAAM,EAAE;MACnBF,WAAW,GAAG,IAAI;IACtB;EAEJ;EAEA,IAAI,CAACA,WAAW,EAAE;IACd,MAAM,IAAIG,KAAK,CAAC,sBAAsB,CAAC;EAC3C;AAEJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}